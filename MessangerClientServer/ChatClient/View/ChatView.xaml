<UserControl x:Class="ChatClient.View.ChatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:ChatClient.ViewModel"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignWidth="561" d:DesignHeight="728" Background="#373737" Visibility="{Binding Condition}">
    <UserControl.DataContext>
        <viewModel:ChatViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style x:Key="ScrollBarLineButtonTopStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#f4f4f4" Points="3,16 9,1 15,16"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#f4f4f4" Points="3,1 9,16 15,1"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="MinHeight" Value="27"/>
            <Setter Property="Height" Value="67"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="#f4f4f4" Margin="3" RadiusX="3" RadiusY="3"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="16"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="16"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="16"
                          Style="{StaticResource ScrollBarLineButtonTopStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track
                    Name="PART_Track"
                    ViewportSize="{x:Static sys:Double.NaN}"
                    Grid.Row="1" 
                    IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2" Height="16"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>
    </UserControl.Resources>

    <Grid
        Margin="9">
        <Grid.RowDefinitions>
            <RowDefinition Height="67"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="67"/>
        </Grid.RowDefinitions>
        <Border
            Grid.Row="0"
            CornerRadius="3, 3, 0, 0"
            Background="#708090">
            <DockPanel
                Background="Transparent">
                <Label 
                    DockPanel.Dock="Top" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    HorizontalContentAlignment="Center" 
                    VerticalContentAlignment="Stretch"
                    Content="Чат"
                    FontSize="28"
                    FontWeight="Bold"
                    Foreground="#373737"
                    Margin="12"/>
            </DockPanel>
        </Border>
        <ListView
            Name="MessageListView"
            Grid.Row="1"
            Focusable="False"
            IsTabStop="False"
            BorderThickness="0"
            ItemsSource="{Binding Messages, UpdateSourceTrigger=PropertyChanged}"
            Background="#2F4F4F"
            Margin="0, 5, 0, 0"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.ScrollUnit="Pixel"
            ScrollViewer.ScrollChanged="OnScrollChanged"
            SelectedIndex="{Binding Index, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Name="Border">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background"
                                                Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="ScrollViewer">
                    <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                    <Setter Property="CanContentScroll" Value="False"/>
                    <Setter Property="IsEnabled" Value="{Binding IsFocus, UpdateSourceTrigger=PropertyChanged}"/>
                </Style>
            </ListView.Resources>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border 
                        Focusable="False"
                        CornerRadius="5"
                        Margin="28, 28, 28, 28"
                        Padding="4"
                        MinWidth="55"
                        MaxWidth="428">
                        <Border.Resources>
                            <Style TargetType="Border">
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="Background" Value="#4682B4"/>
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding IsItMe}" Value="True">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="Background" Value="#1E90FF"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Resources>
                        <Border.InputBindings>
                            <MouseBinding Command="{Binding DataContext.CopyText, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" MouseAction="LeftDoubleClick" />
                        </Border.InputBindings>
                        <TextBlock 
                            Focusable="False"
                            Padding="12"
                            Background="Transparent"
                            HorizontalAlignment="Left"
                            Margin="5">
                            <DockPanel Focusable="False">
                                <TextBlock
                                    Style="{x:Null}"
                                    FontSize="19"
                                    DockPanel.Dock="Top" 
                                    TextWrapping="Wrap"
                                    Background="Transparent"
                                    Foreground="#f4f4f4" 
                                    TextAlignment="Left" 
                                    Text="{Binding SendMessage, UpdateSourceTrigger=PropertyChanged}"/>
                                <StackPanel 
                                    DockPanel.Dock="Bottom" 
                                    Orientation="Horizontal">
                                    <TextBlock  
                                        FontSize="12"
                                        Foreground="Black" 
                                        Background="Transparent"
                                        FontWeight="Bold"
                                        TextAlignment="Left" 
                                        Text="{Binding SenderName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Margin="5"/>
                                    <TextBlock 
                                        FontSize="12"
                                        Foreground="Black" 
                                        Background="Transparent"
                                        TextAlignment="Left"
                                        HorizontalAlignment="Right"
                                        Text="{Binding DateSend, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Margin="5"/>
                                </StackPanel>
                            </DockPanel>
                        </TextBlock>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel
            Grid.Row="1"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Orientation="Vertical">
            <Label
                DockPanel.Dock="Top"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Content="{Binding CountNewMessages, UpdateSourceTrigger=PropertyChanged}"
                Foreground="FloralWhite"
                Background="#808080"
                FontWeight="Bold"
                Margin="0,0,0,-19"
                Panel.ZIndex="1">
                <Label.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger  Binding="{Binding CountNewMessages, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Label.Resources>
                <Label.Effect>
                    <DropShadowEffect Color="#373737" Direction="320" ShadowDepth="0" Opacity="0.67" />
                </Label.Effect>
            </Label>
            <Button 
                Focusable="False"
                Width="75"
                Margin="12"
                Opacity="{Binding Opacity}"
                Command="{Binding GoToBottom}">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"><InlineUIContainer>
                    <materialDesign:PackIcon Kind="ArrowDownBold" Foreground="FloralWhite" HorizontalAlignment="Center" VerticalAlignment="Center" Height="28" Width="55"/>
                </InlineUIContainer></TextBlock>
                <Button.Resources>
                    <Style TargetType="Button">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Ellipse Fill="#808080" Width="40" Height="40"/>
                                        <Label 
                                            Content = "{TemplateBinding Content}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger  Binding="{Binding IsVisibleButtonToBottom, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </StackPanel>
        <Label 
            Focusable="False"
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Opacity="0.75"
            FontSize="12"
            Padding="28"
            Background="Gainsboro"
            Foreground="Blue"
            Content="Сообщение скопировано в буфер обмена">
            <Label.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="9"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleNotification, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Resources>
        </Label>
        <Border
            Grid.Row="2"
            Background="#708090"
            Margin="0, 5, 0, 0"
            CornerRadius="0, 0, 3, 3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="312"/>
                    <ColumnDefinition MinWidth="55" MaxWidth="128"/>
                </Grid.ColumnDefinitions>
                <TextBox
                    Grid.Column="0"
                    Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}"
                    BorderThickness="0"
                    FontSize="19"
                    AcceptsReturn="True"
                    TextWrapping="Wrap"
                    Margin="7"
                    Padding="3"
                    Background="#f4f4f4">
                    <TextBox.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding Send}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <Button
                    Command="{Binding Send}"
                    Grid.Column="1"
                    Focusable="False"
                    BorderThickness="0"
                    Background="Transparent"
                    Margin="0, 7, 7, 7">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"><InlineUIContainer>
                        <materialDesign:PackIcon Kind="Send" Foreground="#f4f4f4" HorizontalAlignment="Center" VerticalAlignment="Center" Height="35" Width="55"/>
                    </InlineUIContainer></TextBlock>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>