<UserControl x:Class="ChatClient.View.Game.GamePlayView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:ChatClient.ViewModel.Game"
             xmlns:spinner="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignWidth="561" d:DesignHeight="728" Background="#373737" Visibility="{Binding Condition}">

    <UserControl.DataContext>
        <viewModel:GamePlayViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Style x:Key="BackColor"  TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger  Binding="{Binding IsVisibleCancel, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#87CEEB"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#000000"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#1E90FF"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#f4f4f4"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="#87CEEB"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            To="#000000"
                                            Duration="0:0:0.4"
                                            FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="140" MaxHeight="140"/>
            <RowDefinition MinHeight="384" MaxHeight="384"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition MinWidth="384" MaxWidth="384"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Style="{StaticResource BackColor}"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Focusable="False"
            Command="{Binding Cancel}"
            FontSize="19"
            Background="#1E90FF"
            Foreground="#f4f4f4"
            BorderThickness="0"
            MaxWidth="167"
            Margin="0"
            Padding="12">
            <Button.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleCancel, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0, 0, 0, 7"/>
                </Style>
            </Button.Resources>
            <Button.Effect>
                <DropShadowEffect Color="#373737" Direction="320" ShadowDepth="10" Opacity="0.5" />
            </Button.Effect>
            <TextBlock Text="Выход" FontSize="19" HorizontalAlignment="Center"/>
        </Button>
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Vertical"
            Margin="0, 28, 0, 5">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Text="Крестики-нолики"
                FontSize="40"
                TextWrapping="Wrap"
                TextAlignment="Center"
                FontStyle="Italic"
                FontWeight="Bold"
                Foreground="#1E90FF"/>
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger  Binding="{Binding IsVisibleGame, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <TextBlock
                    Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                    FontSize="19"
                    TextWrapping="Wrap"
                    TextAlignment="Center"
                    Foreground="#1E90FF"
                    Margin="0"
                    MaxWidth="167"/>

                <TextBlock
                    Text="VS"
                    FontSize="19"
                    TextWrapping="Wrap"
                    TextAlignment="Center"
                    Foreground="FloralWhite"
                    Margin="9, 0"/>

                <TextBlock
                    Text="{Binding OpponentName, UpdateSourceTrigger=PropertyChanged}"
                    FontSize="19"
                    TextWrapping="Wrap"
                    TextAlignment="Center"
                    Foreground="#1E90FF"
                    Margin="0, 0, 3, 0"
                    MaxWidth="167"/>
            </StackPanel>
        </StackPanel>
        <Grid
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Margin="0">
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleGame, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="128" MaxHeight="128"/>
                <RowDefinition MinHeight="128" MaxHeight="128"/>
                <RowDefinition MinHeight="128" MaxHeight="128"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="128" MaxWidth="128"/>
                <ColumnDefinition MinWidth="128" MaxWidth="128"/>
                <ColumnDefinition MinWidth="128" MaxWidth="128"/>
            </Grid.ColumnDefinitions>
            <Border
                Focusable="False"
                Grid.Row="0"
                Grid.Column="0"
                BorderThickness="5, 5, 0, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding OneOneSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickOneOne}"
                    Background="{Binding OneOneBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="0"
                Grid.Column="1"
                BorderThickness="5, 5, 0, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding OneTwoSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickOneTwo}"
                    Background="{Binding OneTwoBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="0"
                Grid.Column="2"
                BorderThickness="5, 5, 5, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding OneThreeSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickOneThree}"
                    Background="{Binding OneThreeBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="1"
                Grid.Column="0"
                BorderThickness="5, 5, 0, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding TwoOneSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickTwoOne}"
                    Background="{Binding TwoOneBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="1"
                Grid.Column="1"
                BorderThickness="5, 5, 0, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding TwoTwoSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickTwoTwo}"
                    Background="{Binding TwoTwoBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="1"
                Grid.Column="2"
                BorderThickness="5, 5, 5, 0"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding TwoThreeSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickTwoThree}"
                    Background="{Binding TwoThreeBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="2"
                Grid.Column="0"
                BorderThickness="5, 5, 0, 5"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding ThreeOneSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickThreeOne}"
                    Background="{Binding ThreeOneBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="2"
                Grid.Column="1"
                BorderThickness="5, 5, 0, 5"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding ThreeTwoSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickThreeTwo}"
                    Background="{Binding ThreeTwoBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
            <Border
                Focusable="False"
                Grid.Row="2"
                Grid.Column="2"
                BorderThickness="5, 5, 5, 5"
                BorderBrush="#696969">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="#1E90FF"
                    FontSize="40"
                    BorderThickness="0"
                    Content="{Binding ThreeThreeSquare, UpdateSourceTrigger=PropertyChanged}"
                    Command="{Binding ClickThreeThree}"
                    Background="{Binding ThreeThreeBack, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsEnable, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
        </Grid>

        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            Orientation="Vertical">
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleSpinner, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <spinner:FontAwesome
                Icon="Cog" 
                FontSize="67"
                Foreground="#1E90FF"
                Spin="True" 
                SpinDuration="3"/>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="Поиск второго игрока..."
                Foreground="#1E90FF"
                FontSize="19"/>
        </StackPanel>

        <Label 
            Focusable="False"
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Opacity="0.75"
            FontSize="12"
            Padding="28"
            Background="Gainsboro"
            Foreground="Blue"
            Content="{Binding TextNotification}">
            <Label.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="9"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleNotification, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Resources>
        </Label>

        <StackPanel 
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Orientation="Vertical"
            Margin="0, 28, 0, 0">
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger  Binding="{Binding IsVisibleGame, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="Ход игры"
                FontSize="28"
                TextWrapping="Wrap"
                TextAlignment="Center"
                Foreground="FloralWhite"/>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{Binding GameInformation, UpdateSourceTrigger=PropertyChanged}"
                FontSize="28"
                TextWrapping="Wrap"
                TextAlignment="Center"
                Foreground="#1E90FF"
                Margin="0, 0, 9, 0"/>
        </StackPanel>
    </Grid>
</UserControl>